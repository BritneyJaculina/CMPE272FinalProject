{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\britn\\\\IdeaProjects\\\\team-project-team-spartan\\\\src\\\\pages\\\\AdminStudentPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminStudentPage = () => {\n  _s();\n  const [courseInfo, setCourseInfo] = useState(null);\n  const [studentInfo, setstudentInfo] = useState(null);\n  const {\n    courseName\n  } = useParams();\n  const [students, setStudents] = useState([]);\n\n  /*    useEffect(() => {\r\n          fetchStudents();\r\n      }, []);*/\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/v1/users/courseName?courseName=${courseName}`, config);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStudents(data);\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      }\n    };\n    fetchStudents();\n\n    // Cleanup function (optional)\n    return () => {\n      // Cleanup code here (if needed)\n    };\n  }, [courseName]); // Run effect when courseName changes\n\n  const fetchStudents = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      };\n      //http://localhost:8080/api/v1/users/courseName?courseName=Software Engineering\n      //http://localhost:8080/api/v1/courses/name?courseName=${courseName}\n      const response = await axios.get(`http://localhost:8080/api/v1/users/courseName?courseName=${courseName}`, config);\n      setCourseInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching students:', error);\n    }\n  };\n  if (!courseInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Course: \", courseInfo.courseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Students:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminStudentPage, \"tVBqbgMLnfQhH86sdcy5loYAAKk=\", false, function () {\n  return [useParams];\n});\n_c = AdminStudentPage;\nexport default AdminStudentPage;\nvar _c;\n$RefreshReg$(_c, \"AdminStudentPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","AdminStudentPage","_s","courseInfo","setCourseInfo","studentInfo","setstudentInfo","courseName","students","setStudents","fetchStudents","response","get","config","ok","Error","data","json","error","console","token","localStorage","getItem","headers","Authorization","Accept","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/britn/IdeaProjects/team-project-team-spartan/src/pages/AdminStudentPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst AdminStudentPage = () => {\r\n    const [courseInfo, setCourseInfo] = useState(null);\r\n    const [studentInfo, setstudentInfo] = useState(null);\r\n    const { courseName } = useParams();\r\n\r\n    const [students, setStudents] = useState([]);\r\n\r\n\r\n/*    useEffect(() => {\r\n        fetchStudents();\r\n    }, []);*/\r\n\r\n    useEffect(() => {\r\n        const fetchStudents = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/v1/users/courseName?courseName=${courseName}`, config);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setStudents(data);\r\n            } catch (error) {\r\n                console.error('There was a problem with the fetch operation:', error);\r\n            }\r\n        };\r\n\r\n        fetchStudents();\r\n\r\n        // Cleanup function (optional)\r\n        return () => {\r\n            // Cleanup code here (if needed)\r\n        };\r\n    }, [courseName]); // Run effect when courseName changes\r\n\r\n\r\n\r\n    const fetchStudents = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json'\r\n                }\r\n            };\r\n            //http://localhost:8080/api/v1/users/courseName?courseName=Software Engineering\r\n            //http://localhost:8080/api/v1/courses/name?courseName=${courseName}\r\n            const response = await axios.get(`http://localhost:8080/api/v1/users/courseName?courseName=${courseName}`, config);\r\n            setCourseInfo(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching students:', error);\r\n        }\r\n    };\r\n\r\n    if (!courseInfo) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Course: {courseInfo.courseName}</h1>\r\n            <h2>\r\n                Students:\r\n            </h2>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminStudentPage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEY;EAAW,CAAC,GAAGT,SAAS,CAAC,CAAC;EAElC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAGhD;AACA;AACA;;EAEIC,SAAS,CAAC,MAAM;IACZ,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,4DAA2DL,UAAW,EAAC,EAAEM,MAAM,CAAC;QAClH,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,WAAW,CAACO,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACzE;IACJ,CAAC;IAEDR,aAAa,CAAC,CAAC;;IAEf;IACA,OAAO,MAAM;MACT;IAAA,CACH;EACL,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;;EAIlB,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMT,MAAM,GAAG;QACXU,OAAO,EAAE;UACLC,aAAa,EAAG,UAASJ,KAAM,EAAC;UAChCK,MAAM,EAAE;QACZ;MACJ,CAAC;MACD;MACA;MACA,MAAMd,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,4DAA2DL,UAAW,EAAC,EAAEM,MAAM,CAAC;MAClHT,aAAa,CAACO,QAAQ,CAACK,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,IAAI,CAACf,UAAU,EAAE;IACb,oBAAOH,OAAA;MAAA0B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACI9B,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,GAAI,UAAQ,EAACvB,UAAU,CAACI,UAAU;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxC9B,OAAA;MAAA0B,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAnEID,gBAAgB;EAAA,QAGKH,SAAS;AAAA;AAAAiC,EAAA,GAH9B9B,gBAAgB;AAqEtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}