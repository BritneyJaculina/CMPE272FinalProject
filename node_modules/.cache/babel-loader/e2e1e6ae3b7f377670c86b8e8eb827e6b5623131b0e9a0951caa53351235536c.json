{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\britn\\\\IdeaProjects\\\\team-project-team-spartan\\\\src\\\\pages\\\\StudentCoursePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentCoursePage = () => {\n  _s();\n  const [courseInfo, setCourseInfo] = useState(null);\n  const {\n    courseName\n  } = useParams();\n  // State to store the courses data fetched from MongoDB\n  const [courses, setCourses] = useState([]);\n  // State to store the grades for a selected course\n  const [selectedCourseGrades, setSelectedCourseGrades] = useState([]);\n  useEffect(() => {\n    fetchCourseInfo();\n  }, []);\n\n  // Fetch course data from MongoDB\n  useEffect(() => {\n    // Assuming you have a function to fetch course data from MongoDB\n    // Replace 'fetchCoursesData' with your actual function\n    fetchCoursesData().then(data => {\n      setCourses(data);\n    }).catch(error => {\n      console.error('Error fetching course data:', error);\n    });\n  }, []);\n\n  // Function to fetch grades for a selected course\n  const fetchCourseGrades = async courseId => {\n    try {\n      // Assuming you have an API endpoint to fetch grades for a course\n      const response = await fetch(`/api/grades?courseId=${courseId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch grades');\n      }\n      const data = await response.json();\n      setSelectedCourseGrades(data);\n    } catch (error) {\n      console.error('Error fetching grades:', error);\n    }\n  };\n  const fetchCourseInfo = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json'\n        }\n      };\n      const response = await axios.get(`http://localhost:8080/api/v1/courses/name?courseName=${courseName}`, config);\n      setCourseInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching course info:', error);\n    }\n  };\n  if (!courseInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Course: \", courseInfo.courseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assignments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courseInfo.assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: assignment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quizzes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courseInfo.quizzes.map((quiz, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: quiz\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentCoursePage, \"53cADkrHMzr1r88josmUXbJCcFo=\", false, function () {\n  return [useParams];\n});\n_c = StudentCoursePage;\nexport default StudentCoursePage;\nvar _c;\n$RefreshReg$(_c, \"StudentCoursePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","StudentCoursePage","_s","courseInfo","setCourseInfo","courseName","courses","setCourses","selectedCourseGrades","setSelectedCourseGrades","fetchCourseInfo","fetchCoursesData","then","data","catch","error","console","fetchCourseGrades","courseId","response","fetch","ok","Error","json","token","localStorage","getItem","config","headers","Authorization","Accept","get","children","fileName","_jsxFileName","lineNumber","columnNumber","assignments","map","assignment","index","quizzes","quiz","_c","$RefreshReg$"],"sources":["C:/Users/britn/IdeaProjects/team-project-team-spartan/src/pages/StudentCoursePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst StudentCoursePage = () => {\r\n    const [courseInfo, setCourseInfo] = useState(null);\r\n    const { courseName } = useParams();\r\n    // State to store the courses data fetched from MongoDB\r\n    const [courses, setCourses] = useState([]);\r\n    // State to store the grades for a selected course\r\n    const [selectedCourseGrades, setSelectedCourseGrades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCourseInfo();\r\n    }, []);\r\n\r\n    // Fetch course data from MongoDB\r\n    useEffect(() => {\r\n        // Assuming you have a function to fetch course data from MongoDB\r\n        // Replace 'fetchCoursesData' with your actual function\r\n        fetchCoursesData()\r\n            .then(data => {\r\n                setCourses(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching course data:', error);\r\n            });\r\n    }, []);\r\n\r\n    // Function to fetch grades for a selected course\r\n    const fetchCourseGrades = async (courseId) => {\r\n        try {\r\n            // Assuming you have an API endpoint to fetch grades for a course\r\n            const response = await fetch(`/api/grades?courseId=${courseId}`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch grades');\r\n            }\r\n            const data = await response.json();\r\n            setSelectedCourseGrades(data);\r\n        } catch (error) {\r\n            console.error('Error fetching grades:', error);\r\n        }\r\n    };\r\n\r\n    const fetchCourseInfo = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    Accept: 'application/json'\r\n                }\r\n            };\r\n            const response = await axios.get(`http://localhost:8080/api/v1/courses/name?courseName=${courseName}`, config);\r\n            setCourseInfo(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching course info:', error);\r\n        }\r\n    };\r\n\r\n    if (!courseInfo) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Course: {courseInfo.courseName}</h1>\r\n            <h2>Assignments:</h2>\r\n            <ul>\r\n                {courseInfo.assignments.map((assignment, index) => (\r\n                    <li key={index}>{assignment}</li>\r\n                ))}\r\n            </ul>\r\n            <h2>Quizzes:</h2>\r\n            <ul>\r\n                {courseInfo.quizzes.map((quiz, index) => (\r\n                    <li key={index}>{quiz}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentCoursePage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM;IAAEU;EAAW,CAAC,GAAGP,SAAS,CAAC,CAAC;EAClC;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpEC,SAAS,CAAC,MAAM;IACZc,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAd,SAAS,CAAC,MAAM;IACZ;IACA;IACAe,gBAAgB,CAAC,CAAC,CACbC,IAAI,CAACC,IAAI,IAAI;MACVN,UAAU,CAACM,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAC1C,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wBAAuBF,QAAS,EAAC,CAAC;MAChE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMT,IAAI,GAAG,MAAMM,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCd,uBAAuB,CAACI,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAML,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,GAAG;QACXC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASL,KAAM,EAAC;UAChCM,MAAM,EAAE;QACZ;MACJ,CAAC;MACD,MAAMX,QAAQ,GAAG,MAAMtB,KAAK,CAACkC,GAAG,CAAE,wDAAuD1B,UAAW,EAAC,EAAEsB,MAAM,CAAC;MAC9GvB,aAAa,CAACe,QAAQ,CAACN,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,IAAI,CAACZ,UAAU,EAAE;IACb,oBAAOH,OAAA;MAAAgC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIpC,OAAA;IAAAgC,QAAA,gBACIhC,OAAA;MAAAgC,QAAA,GAAI,UAAQ,EAAC7B,UAAU,CAACE,UAAU;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCpC,OAAA;MAAAgC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpC,OAAA;MAAAgC,QAAA,EACK7B,UAAU,CAACkC,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC1CxC,OAAA;QAAAgC,QAAA,EAAiBO;MAAU,GAAlBC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLpC,OAAA;MAAAgC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpC,OAAA;MAAAgC,QAAA,EACK7B,UAAU,CAACsC,OAAO,CAACH,GAAG,CAAC,CAACI,IAAI,EAAEF,KAAK,kBAChCxC,OAAA;QAAAgC,QAAA,EAAiBU;MAAI,GAAZF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClC,EAAA,CA7EID,iBAAiB;EAAA,QAEIH,SAAS;AAAA;AAAA6C,EAAA,GAF9B1C,iBAAiB;AA+EvB,eAAeA,iBAAiB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}